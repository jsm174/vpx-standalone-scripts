--- /Users/francisdb/vpinball/tables/Flash (Williams 1979) bord.vbs.original	2023-06-16 15:00:48
+++ /Users/francisdb/vpinball/tables/Flash (Williams 1979) bord.vbs	2023-06-16 14:50:48
@@ -2124,6 +2124,39 @@
 '                DROP TARGETS INITIALIZATION
 '******************************************************
 
+Class DropTarget
+	Private m_primary, m_secondary, m_prim, m_sw, m_animate, m_isDropped
+  
+	Public Property Get Primary(): Set Primary = m_primary: End Property
+	Public Property Let Primary(input): Set m_primary = input: End Property
+  
+	Public Property Get Secondary(): Set Secondary = m_secondary: End Property
+	Public Property Let Secondary(input): Set m_secondary = input: End Property
+  
+	Public Property Get Prim(): Set Prim = m_prim: End Property
+	Public Property Let Prim(input): Set m_prim = input: End Property
+  
+	Public Property Get Sw(): Sw = m_sw: End Property
+	Public Property Let Sw(input): m_sw = input: End Property
+  
+	Public Property Get Animate(): Animate = m_animate: End Property
+	Public Property Let Animate(input): m_animate = input: End Property
+  
+	Public Property Get IsDropped(): IsDropped = m_isDropped: End Property
+	Public Property Let IsDropped(input): m_isDropped = input: End Property
+  
+	Public default Function init(primary, secondary, prim, sw, animate, isDropped)
+	  Set m_primary = primary
+	  Set m_secondary = secondary
+	  Set m_prim = prim
+	  m_sw = sw
+	  m_animate = animate
+	  m_isDropped = isDropped
+  
+	  Set Init = Me
+	End Function
+  End Class
+
 'Set array with drop target objects
 
 dim DT28, DT29, DT30, DT32, DT33, DT34, DT35, DT36
@@ -2143,16 +2176,16 @@
 '        Values for annimate: 1 - bend target (hit to primary), 2 - drop target (hit to secondary), 3 - brick target (high velocity hit to secondary), -1 - raise target 
 
 ' Center Bank
-DT28 = Array(sw28, sw28y, psw28, 28, 0)
-DT29 = Array(sw29, sw29y, psw29, 29, 0)
-DT30 = Array(sw30, sw30y, psw30, 30, 0)
+Set DT28 = (new DropTarget)(sw28, sw28y, psw28, 28, 0, false)
+Set DT29 = (new DropTarget)(sw29, sw29y, psw29, 29, 0, false)
+Set DT30 = (new DropTarget)(sw30, sw30y, psw30, 30, 0, false)
 
 ' Left Bank
-DT32 = Array(sw32, sw32y, psw32, 32, 0)
-DT33 = Array(sw33, sw33y, psw33, 33, 0)
-DT34 = Array(sw34, sw34y, psw34, 34, 0)
-DT35 = Array(sw35, sw35y, psw35, 35, 0)
-DT36 = Array(sw36, sw36y, psw36, 36, 0)
+Set DT32 = (new DropTarget)(sw32, sw32y, psw32, 32, 0, false)
+Set DT33 = (new DropTarget)(sw33, sw33y, psw33, 33, 0, false)
+Set DT34 = (new DropTarget)(sw34, sw34y, psw34, 34, 0, false)
+Set DT35 = (new DropTarget)(sw35, sw35y, psw35, 35, 0, false)
+Set DT36 = (new DropTarget)(sw36, sw36y, psw36, 36, 0, false)
 
 'Add all the Drop Target Arrays to Drop Target Animation Array
 ' DTAnimationArray = Array(DT1, DT2, ....)
@@ -2186,9 +2219,9 @@
 	i = DTArrayID(switch)
 
 	PlayTargetSound
-	DTArray(i)(4) =  DTCheckBrick(Activeball,DTArray(i)(2))
-	If DTArray(i)(4) = 1 or DTArray(i)(4) = 3 or DTArray(i)(4) = 4 Then
-			DTBallPhysics Activeball, DTArray(i)(2).rotz, DTMass
+	DTArray(i).animate =  DTCheckBrick(Activeball,DTArray(i).prim)
+	If DTArray(i).animate = 1 or DTArray(i).animate = 3 or DTArray(i).animate = 4 Then
+			DTBallPhysics Activeball, DTArray(i).prim.rotz, DTMass
 	End If
 	DoDTAnim
 End Sub
@@ -2197,7 +2230,7 @@
 	Dim i
 	i = DTArrayID(switch)
 
-	DTArray(i)(4) = -1
+	DTArray(i).animate = -1
 	DoDTAnim
 End Sub
 
@@ -2205,14 +2238,14 @@
 	Dim i
 	i = DTArrayID(switch)
 
-	DTArray(i)(4) = 1
+	DTArray(i).animate = 1
 	DoDTAnim
 End Sub
 
 Function DTArrayID(switch)
 	Dim i
 	For i = 0 to uBound(DTArray) 
-			If DTArray(i)(3) = switch Then DTArrayID = i:Exit Function 
+			If DTArray(i).sw = switch Then DTArrayID = i:Exit Function 
 	Next
 End Function
 
@@ -2284,7 +2317,7 @@
 Sub DoDTAnim()
 	Dim i
 	For i=0 to Ubound(DTArray)
-			DTArray(i)(4) = DTAnimate(DTArray(i)(0),DTArray(i)(1),DTArray(i)(2),DTArray(i)(3),DTArray(i)(4))
+			DTArray(i).animate = DTAnimate(DTArray(i).primary,DTArray(i).secondary,DTArray(i).prim,DTArray(i).sw,DTArray(i).animate)
 	Next
 End Sub
 
