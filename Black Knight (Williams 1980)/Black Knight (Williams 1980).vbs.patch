--- /Users/francisdb/vpinball/tables/Black Knight (Williams 1980).vbs.original	2023-06-14 23:00:31
+++ /Users/francisdb/vpinball/tables/Black Knight (Williams 1980).vbs	2023-06-14 23:00:27
@@ -896,7 +896,7 @@
 	Dim obj, idx, mult, nr
 	For idx = 0 to 100 : PfInsertChange(idx) = False : Next
 	For Each obj In aColl
-		idx = left(obj.name, 2) : mult = mid(obj.name, 4, 3)
+		idx = CInt(left(obj.name, 2)) : mult = mid(obj.name, 4, 3)
 		obj.BlendDisableLightingFromBelow = 1
 		Set PFInsertOnPrim(idx) = obj : PfInsertOnPrimMult(idx) = mult
 		If idx > PfInsertMax then PfInsertMax = idx
@@ -1806,7 +1806,40 @@
 '******************************************************
 '		DROP TARGETS INITIALIZATION
 '******************************************************
+
+Class DropTarget
+	Private m_primary, m_secondary, m_prim, m_sw, m_animate, m_isDropped
+  
+	Public Property Get Primary(): Set Primary = m_primary: End Property
+	Public Property Let Primary(input): Set m_primary = input: End Property
+  
+	Public Property Get Secondary(): Set Secondary = m_secondary: End Property
+	Public Property Let Secondary(input): Set m_secondary = input: End Property
 
+	Public Property Get Prim(): Set Prim = m_prim: End Property
+	Public Property Let Prim(input): Set m_prim = input: End Property
+  
+	Public Property Get Sw(): Sw = m_sw: End Property
+	Public Property Let Sw(input): m_sw = input: End Property
+  
+	Public Property Get Animate(): Animate = m_animate: End Property
+	Public Property Let Animate(input): m_animate = input: End Property
+  
+	Public Property Get IsDropped(): IsDropped = m_isDropped: End Property
+	Public Property Let IsDropped(input): m_isDropped = input: End Property
+  
+	Public default Function init(primary, secondary, prim, sw, animate, isDropped)
+	  Set m_primary = primary
+	  Set m_secondary = secondary
+	  Set m_prim = prim
+	  m_sw = sw
+	  m_animate = animate
+	  m_isDropped = isDropped
+  
+	  Set Init = Me
+	End Function
+End Class
+
 'Define a variable for each drop target
 Dim DT25, DT26, DT27, DT29, DT30, DT31, DT33, DT34, DT35, DT37, DT38, DT39
 
@@ -1828,18 +1861,18 @@
 
 
 ' Target Bank
-DT25 = Array(sw25, sw25y, psw25, 25, 0)
-DT26 = Array(sw26, sw26y, psw26, 26, 0)
-DT27 = Array(sw27, sw27y, psw27, 27, 0)
-DT29 = Array(sw29, sw29y, psw29, 29, 0)
-DT30 = Array(sw30, sw30y, psw30, 30, 0)
-DT31 = Array(sw31, sw31y, psw31, 31, 0)
-DT33 = Array(sw33, sw33y, psw33, 33, 0)
-DT34 = Array(sw34, sw34y, psw34, 34, 0)
-DT35 = Array(sw35, sw35y, psw35, 35, 0)
-DT37 = Array(sw37, sw37y, psw37, 37, 0)
-DT38 = Array(sw38, sw38y, psw38, 38, 0)
-DT39 = Array(sw39, sw39y, psw39, 39, 0)
+Set DT25 = (new DropTarget)(sw25, sw25y, psw25, 25, 0, false)
+Set DT26 = (new DropTarget)(sw26, sw26y, psw26, 26, 0, false)
+Set DT27 = (new DropTarget)(sw27, sw27y, psw27, 27, 0, false)
+Set DT29 = (new DropTarget)(sw29, sw29y, psw29, 29, 0, false)
+Set DT30 = (new DropTarget)(sw30, sw30y, psw30, 30, 0, false)
+Set DT31 = (new DropTarget)(sw31, sw31y, psw31, 31, 0, false)
+Set DT33 = (new DropTarget)(sw33, sw33y, psw33, 33, 0, false)
+Set DT34 = (new DropTarget)(sw34, sw34y, psw34, 34, 0, false)
+Set DT35 = (new DropTarget)(sw35, sw35y, psw35, 35, 0, false)
+Set DT37 = (new DropTarget)(sw37, sw37y, psw37, 37, 0, false)
+Set DT38 = (new DropTarget)(sw38, sw38y, psw38, 38, 0, false)
+Set DT39 = (new DropTarget)(sw39, sw39y, psw39, 39, 0, false)
 
 'Add all the Drop Target Arrays to Drop Target Animation Array
 ' DTAnimationArray = Array(DT1, DT2, ....)
@@ -1872,10 +1905,10 @@
 	i = DTArrayID(switch)
 
 	PlayTargetSound
-	DTArray(i)(4) =  DTCheckBrick(Activeball,DTArray(i)(2))
-	DTArray(i)(4) =  DTCheckBrick(Activeball,DTArray(i)(2))
-	If DTArray(i)(4) = 1 or DTArray(i)(4) = 3 Then
-		DTBallPhysics Activeball, DTArray(i)(2).rotz, DTMass
+	DTArray(i).animate =  DTCheckBrick(Activeball,DTArray(i).prim)
+	DTArray(i).animate =  DTCheckBrick(Activeball,DTArray(i).prim)
+	If DTArray(i).animate = 1 or DTArray(i).animate = 3 Then
+		DTBallPhysics Activeball, DTArray(i).prim.rotz, DTMass
 	End If
 
 	DoDTAnim
@@ -1885,7 +1918,7 @@
 	Dim i
 	i = DTArrayID(switch)
 
-	DTArray(i)(4) = -1
+	DTArray(i).animate = -1
 	DoDTAnim
 End Sub
 
@@ -1893,14 +1926,14 @@
 	Dim i
 	i = DTArrayID(switch)
 
-	DTArray(i)(4) = 1
+	DTArray(i).animate = 1
 	DoDTAnim
 End Sub
 
 Function DTArrayID(switch)
 	Dim i
 	For i = 0 to uBound(DTArray) 
-		If DTArray(i)(3) = switch Then DTArrayID = i:Exit Function 
+		If DTArray(i).sw = switch Then DTArrayID = i:Exit Function 
 	Next
 End Function
 
@@ -1954,7 +1987,7 @@
 Sub DoDTAnim()
 	Dim i
 	For i=0 to Ubound(DTArray)
-		DTArray(i)(4) = DTAnimate(DTArray(i)(0),DTArray(i)(1),DTArray(i)(2),DTArray(i)(3),DTArray(i)(4))
+		DTArray(i).animate = DTAnimate(DTArray(i).primary,DTArray(i).secondary,DTArray(i).prim,DTArray(i).sw,DTArray(i).animate)
 	Next
 
 	'table specific code
