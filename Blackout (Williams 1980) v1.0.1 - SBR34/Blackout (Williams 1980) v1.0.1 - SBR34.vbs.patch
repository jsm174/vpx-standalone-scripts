--- "Blackout (Williams 1980) v1.0.1 - SBR34.vbs.original"	2024-04-17 18:52:34.625278488 +0200
+++ "Blackout (Williams 1980) v1.0.1 - SBR34.vbs"	2024-04-17 18:51:05.712588439 +0200
@@ -1888,14 +1888,47 @@
 '        Values for annimate: 1 - bend target (hit to primary), 2 - drop target (hit to secondary), 3 - brick target (high velocity hit to secondary), -1 - raise target 
 
 ' Center Bank
-DT25 = Array(sw25, sw25y, psw25, 25, 0)
-DT26 = Array(sw26, sw26y, psw26, 26, 0)
-DT27 = Array(sw27, sw27y, psw27, 27, 0)
+Class DropTarget
+  Private m_primary, m_secondary, m_prim, m_sw, m_animate, m_isDropped
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Secondary(): Set Secondary = m_secondary: End Property
+  Public Property Let Secondary(input): Set m_secondary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public Property Get IsDropped(): IsDropped = m_isDropped: End Property
+  Public Property Let IsDropped(input): m_isDropped = input: End Property
+
+  Public default Function init(primary, secondary, prim, sw, animate, isDropped)
+    Set m_primary = primary
+    Set m_secondary = secondary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+    m_isDropped = isDropped
+
+    Set Init = Me
+  End Function
+End Class
+
+Set DT25 = (new DropTarget)(sw25, sw25y, psw25, 25, 0, false)
+Set DT26 = (new DropTarget)(sw26, sw26y, psw26, 26, 0, false)
+Set DT27 = (new DropTarget)(sw27, sw27y, psw27, 27, 0, false)
 
 ' Left Bank
-DT33 = Array(sw33, sw33y, psw33, 33, 0)
-DT34 = Array(sw34, sw34y, psw34, 34, 0)
-DT35 = Array(sw35, sw35y, psw35, 35, 0)
+Set DT33 = (new DropTarget)(sw33, sw33y, psw33, 33, 0, false)
+Set DT34 = (new DropTarget)(sw34, sw34y, psw34, 34, 0, false)
+Set DT35 = (new DropTarget)(sw35, sw35y, psw35, 35, 0, false)
 
 'Add all the Drop Target Arrays to Drop Target Animation Array
 ' DTAnimationArray = Array(DT1, DT2, ....)
@@ -1929,9 +1962,9 @@
         i = DTArrayID(switch)
 
         PlaySoundAtVol  DTHitSound, Activeball, Vol(Activeball)*22.5
-        DTArray(i)(4) =  DTCheckBrick(Activeball,DTArray(i)(2))
-		If DTArray(i)(4) = 1 or DTArray(i)(4) = 3 or DTArray(i)(4) = 4 Then
-                DTBallPhysics Activeball, DTArray(i)(2).rotz, DTMass
+        DTArray(i).animate =  DTCheckBrick(Activeball,DTArray(i).prim)
+		If DTArray(i).animate = 1 or DTArray(i).animate = 3 or DTArray(i).animate = 4 Then
+                DTBallPhysics Activeball, DTArray(i).prim.rotz, DTMass
         End If
         DoDTAnim
 End Sub
@@ -1940,7 +1973,7 @@
         Dim i
         i = DTArrayID(switch)
 
-        DTArray(i)(4) = -1
+        DTArray(i).animate = -1
         DoDTAnim
 End Sub
 
@@ -1948,14 +1981,14 @@
         Dim i
         i = DTArrayID(switch)
 
-        DTArray(i)(4) = 1
+        DTArray(i).animate = 1
         DoDTAnim
 End Sub
 
 Function DTArrayID(switch)
         Dim i
         For i = 0 to uBound(DTArray) 
-                If DTArray(i)(3) = switch Then DTArrayID = i:Exit Function 
+                If DTArray(i).sw = switch Then DTArrayID = i:Exit Function 
         Next
 End Function
 
@@ -2027,7 +2060,7 @@
 Sub DoDTAnim()
         Dim i
         For i=0 to Ubound(DTArray)
-                DTArray(i)(4) = DTAnimate(DTArray(i)(0),DTArray(i)(1),DTArray(i)(2),DTArray(i)(3),DTArray(i)(4))
+                DTArray(i).animate = DTAnimate(DTArray(i).primary,DTArray(i).secondary,DTArray(i).prim,DTArray(i).sw,DTArray(i).animate)
         Next
 End Sub
 
