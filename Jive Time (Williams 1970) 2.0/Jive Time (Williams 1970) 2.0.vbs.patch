--- Jive Time (Williams 1970) 2.0.vbs.original	2023-08-28 16:59:17
+++ Jive Time (Williams 1970) 2.0.vbs	2023-08-28 16:53:09
@@ -776,7 +776,33 @@
 '******************************************************
 '		STAND-UP TARGET INITIALIZATION
 '******************************************************
+
+Class StandupTarget
+	Private m_primary, m_prim, m_sw, m_animate
+  
+	Public Property Get Primary(): Set Primary = m_primary: End Property
+	Public Property Let Primary(input): Set m_primary = input: End Property
+  
+	Public Property Get Prim(): Set Prim = m_prim: End Property
+	Public Property Let Prim(input): Set m_prim = input: End Property
+  
+	Public Property Get Sw(): Sw = m_sw: End Property
+	Public Property Let Sw(input): m_sw = input: End Property
+  
+	Public Property Get Animate(): Animate = m_animate: End Property
+	Public Property Let Animate(input): m_animate = input: End Property
 
+	Public default Function init(primary, prim, sw, animate)
+	  Set m_primary = primary
+	  Set m_prim = prim
+	  m_sw = sw
+	  m_animate = animate
+  
+	  Set Init = Me
+	End Function
+  End Class
+  
+
 'Define a variable for each stand-up target
 Dim ST1, ST2, ST3, ST4, ST5, ST6, ST7, ST8, ST9
 
\ No newline at end of file
@@ -790,15 +816,15 @@
 '	switch:				ROM switch number
 '	animate:			Arrary slot for handling the animation instrucitons, set to 0
 
-ST1 = Array(ABTarget1,pST001,1,0)
-ST2 = Array(ABTarget2,pST002,2,0)
-ST3 = Array(ABTarget3,pST003,3,0)
-ST4 = Array(ABTarget4,pST004,4,0)
-ST5 = Array(UpMiniPost,pST005,5,0)
-ST6 = Array(UpLampPost,pST006,6,0)
-ST7 = Array(DownPostTarget,pST007,7,0)
-ST8 = Array(GreenOnTarget,pST008,8,0)
-ST9 = Array(YellowOnTarget,pST009,9,0)
+Set ST1 = (new StandupTarget)(ABTarget1,pST001,1,0)
+Set ST2 = (new StandupTarget)(ABTarget2,pST002,2,0)
+Set ST3 = (new StandupTarget)(ABTarget3,pST003,3,0)
+Set ST4 = (new StandupTarget)(ABTarget4,pST004,4,0)
+Set ST5 = (new StandupTarget)(UpMiniPost,pST005,5,0)
+Set ST6 = (new StandupTarget)(UpLampPost,pST006,6,0)
+Set ST7 = (new StandupTarget)(DownPostTarget,pST007,7,0)
+Set ST8 = (new StandupTarget)(GreenOnTarget,pST008,8,0)
+Set ST9 = (new StandupTarget)(YellowOnTarget,pST009,9,0)
 
 'Add all the Stand-up Target Arrays to Stand-up Target Animation Array
 ' STAnimationArray = Array(ST1, ST2, ....)
\ No newline at end of file
@@ -821,10 +847,10 @@
 	i = STArrayID(switch)
 
 	PlayTargetSound
-	STArray(i)(3) =  STCheckHit(Activeball,STArray(i)(0))
+	STArray(i).animate =  STCheckHit(Activeball,STArray(i).primary)
 
-	If STArray(i)(3) <> 0 Then
-		STBallPhysics Activeball, STArray(i)(0).orientation, STMass
+	If STArray(i).animate <> 0 Then
+		STBallPhysics Activeball, STArray(i).primary.orientation, STMass
 	End If
 	DoSTAnim
 End Sub
\ No newline at end of file
@@ -832,7 +858,7 @@
 Function STArrayID(switch)
 	Dim i
 	For i = 0 to uBound(STArray) 
-		If STArray(i)(2) = switch Then STArrayID = i:Exit Function 
+		If STArray(i).sw = switch Then STArrayID = i:Exit Function 
 	Next
 End Function
 
\ No newline at end of file
@@ -869,7 +895,7 @@
 Sub DoSTAnim()
 	Dim i
 	For i=0 to Ubound(STArray)
-		STArray(i)(3) = STAnimate(STArray(i)(0),STArray(i)(1),STArray(i)(2),STArray(i)(3))
+		STArray(i).animate = STAnimate(STArray(i).primary,STArray(i).prim,STArray(i).sw,STArray(i).animate)
 	Next
 End Sub
 
\ No newline at end of file
