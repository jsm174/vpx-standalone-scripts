--- Flash Gordon (Bally 1981) 2.0.2.vbs.original	2023-09-01 11:25:04
+++ Flash Gordon (Bally 1981) 2.0.2.vbs	2023-09-01 11:22:18
@@ -759,7 +759,40 @@
 '******************************************************
 '		DROP TARGETS INITIALIZATION
 '******************************************************
+
+Class DropTarget
+	Private m_primary, m_secondary, m_prim, m_sw, m_animate, m_isDropped
+  
+	Public Property Get Primary(): Set Primary = m_primary: End Property
+	Public Property Let Primary(input): Set m_primary = input: End Property
+  
+	Public Property Get Secondary(): Set Secondary = m_secondary: End Property
+	Public Property Let Secondary(input): Set m_secondary = input: End Property
+  
+	Public Property Get Prim(): Set Prim = m_prim: End Property
+	Public Property Let Prim(input): Set m_prim = input: End Property
+  
+	Public Property Get Sw(): Sw = m_sw: End Property
+	Public Property Let Sw(input): m_sw = input: End Property
 
+	Public Property Get Animate(): Animate = m_animate: End Property
+	Public Property Let Animate(input): m_animate = input: End Property
+  
+	Public Property Get IsDropped(): IsDropped = m_isDropped: End Property
+	Public Property Let IsDropped(input): m_isDropped = input: End Property
+  
+	Public default Function init(primary, secondary, prim, sw, animate, isDropped)
+	  Set m_primary = primary
+	  Set m_secondary = secondary
+	  Set m_prim = prim
+	  m_sw = sw
+	  m_animate = animate
+	  m_isDropped = isDropped
+  
+	  Set Init = Me
+	End Function
+  End Class
+
 'Define a variable for each drop target
 Dim DT3, DT17, DT18, DT19, DT20, DT21, DT22, DT23, DT25, DT26, DT27
 
\ No newline at end of file
@@ -779,17 +812,17 @@
 '
 '	Values for annimate: 1 - bend target (hit to primary), 2 - drop target (hit to secondary), 3 - brick target (high velocity hit to secondary), -1 - raise target 
 
-DT3 = Array(sw3, sw3y, psw3, 3, 0)
-DT17 = Array(sw17, sw17y, psw17, 17, 0)
-DT18 = Array(sw18, sw18y, psw18, 18, 0)
-DT19 = Array(sw19, sw19y, psw19, 19, 0)
-DT20 = Array(sw20, sw20y, psw20, 20, 0)
-DT21 = Array(sw21, sw21y, psw21, 21, 0)
-DT22 = Array(sw22, sw22y, psw22, 22, 0)
-DT23 = Array(sw23, sw23y, psw23, 23, 0)
-DT25 = Array(sw25, sw25y, psw25, 25, 0)
-DT26 = Array(sw26, sw26y, psw26, 26, 0)
-DT27 = Array(sw27, sw27y, psw27, 27, 0)
+Set DT3 = (new DropTarget)(sw3, sw3y, psw3, 3, 0, false)
+Set DT17 = (new DropTarget)(sw17, sw17y, psw17, 17, 0, false)
+Set DT18 = (new DropTarget)(sw18, sw18y, psw18, 18, 0, false)
+Set DT19 = (new DropTarget)(sw19, sw19y, psw19, 19, 0, false)
+Set DT20 = (new DropTarget)(sw20, sw20y, psw20, 20, 0, false)
+Set DT21 = (new DropTarget)(sw21, sw21y, psw21, 21, 0, false)
+Set DT22 = (new DropTarget)(sw22, sw22y, psw22, 22, 0, false)
+Set DT23 = (new DropTarget)(sw23, sw23y, psw23, 23, 0, false)
+Set DT25 = (new DropTarget)(sw25, sw25y, psw25, 25, 0, false)
+Set DT26 = (new DropTarget)(sw26, sw26y, psw26, 26, 0, false)
+Set DT27 = (new DropTarget)(sw27, sw27y, psw27, 27, 0, false)
 
 
 'Add all the Drop Target Arrays to Drop Target Animation Array
\ No newline at end of file
@@ -819,9 +852,9 @@
 	i = DTArrayID(switch)
 
 	PlayTargetSound
-	DTArray(i)(4) =  DTCheckBrick(Activeball,DTArray(i)(2))
-	If DTArray(i)(4) = 1 or DTArray(i)(4) = 3 or DTArray(i)(4) = 4 Then
-		DTBallPhysics Activeball, DTArray(i)(2).rotz, DTMass
+	DTArray(i).animate =  DTCheckBrick(Activeball,DTArray(i).prim)
+	If DTArray(i).animate = 1 or DTArray(i).animate = 3 or DTArray(i).animate = 4 Then
+		DTBallPhysics Activeball, DTArray(i).prim.rotz, DTMass
 	End If
 	DoDTAnim
 End Sub
\ No newline at end of file
@@ -830,7 +863,7 @@
 	Dim i
 	i = DTArrayID(switch)
 
-	DTArray(i)(4) = -1
+	DTArray(i).animate = -1
 	DoDTAnim
 End Sub
 
\ No newline at end of file
@@ -838,14 +871,14 @@
 	Dim i
 	i = DTArrayID(switch)
 
-	DTArray(i)(4) = 1
+	DTArray(i).animate = 1
 	DoDTAnim
 End Sub
 
 Function DTArrayID(switch)
 	Dim i
 	For i = 0 to uBound(DTArray) 
-		If DTArray(i)(3) = switch Then DTArrayID = i:Exit Function 
+		If DTArray(i).sw = switch Then DTArrayID = i:Exit Function 
 	Next
 End Function
 
\ No newline at end of file
@@ -898,7 +931,7 @@
 Sub DoDTAnim()
 	Dim i
 	For i=0 to Ubound(DTArray)
-		DTArray(i)(4) = DTAnimate(DTArray(i)(0),DTArray(i)(1),DTArray(i)(2),DTArray(i)(3),DTArray(i)(4))
+		DTArray(i).animate = DTAnimate(DTArray(i).primary,DTArray(i).secondary,DTArray(i).prim,DTArray(i).sw,DTArray(i).animate)
 	Next
 End Sub
 
\ No newline at end of file
@@ -1098,7 +1131,33 @@
 '******************************************************
 '		STAND-UP TARGET INITIALIZATION
 '******************************************************
+
+Class StandupTarget
+	Private m_primary, m_prim, m_sw, m_animate
+  
+	Public Property Get Primary(): Set Primary = m_primary: End Property
+	Public Property Let Primary(input): Set m_primary = input: End Property
 
+	Public Property Get Prim(): Set Prim = m_prim: End Property
+	Public Property Let Prim(input): Set m_prim = input: End Property
+  
+	Public Property Get Sw(): Sw = m_sw: End Property
+	Public Property Let Sw(input): m_sw = input: End Property
+  
+	Public Property Get Animate(): Animate = m_animate: End Property
+	Public Property Let Animate(input): m_animate = input: End Property
+  
+	Public default Function init(primary, prim, sw, animate)
+	  Set m_primary = primary
+	  Set m_prim = prim
+	  m_sw = sw
+	  m_animate = animate
+  
+	  Set Init = Me
+	End Function
+  End Class
+  
+
 'Define a variable for each stand-up target
 Dim ST12, ST15, ST24, ST28
 
\ No newline at end of file
@@ -1112,10 +1171,10 @@
 '	switch:				ROM switch number
 '	animate:			Arrary slot for handling the animation instrucitons, set to 0
 
-ST12 = Array(sw12, psw12,12, 0)
-ST15 = Array(sw15, psw15,15, 0)
-ST24 = Array(sw24, psw24,24, 0)
-ST28 = Array(sw28, psw28,28, 0)
+Set ST12 = (new StandupTarget)(sw12, psw12,12, 0)
+Set ST15 = (new StandupTarget)(sw15, psw15,15, 0)
+Set ST24 = (new StandupTarget)(sw24, psw24,24, 0)
+Set ST28 = (new StandupTarget)(sw28, psw28,28, 0)
 
 'Add all the Stand-up Target Arrays to Stand-up Target Animation Array
 ' STAnimationArray = Array(ST1, ST2, ....)
\ No newline at end of file
@@ -1136,10 +1195,10 @@
 	i = STArrayID(switch)
 
 	PlayTargetSound
-	STArray(i)(3) =  STCheckHit(Activeball,STArray(i)(0))
+	STArray(i).animate =  STCheckHit(Activeball,STArray(i).primary)
 
-	If STArray(i)(3) <> 0 Then
-		DTBallPhysics Activeball, STArray(i)(0).orientation, STMass
+	If STArray(i).animate <> 0 Then
+		DTBallPhysics Activeball, STArray(i).primary.orientation, STMass
 	End If
 	DoSTAnim
 End Sub
\ No newline at end of file
@@ -1147,7 +1206,7 @@
 Function STArrayID(switch)
 	Dim i
 	For i = 0 to uBound(STArray) 
-		If STArray(i)(2) = switch Then STArrayID = i:Exit Function 
+		If STArray(i).sw = switch Then STArrayID = i:Exit Function 
 	Next
 End Function
 
\ No newline at end of file
@@ -1176,7 +1235,7 @@
 Sub DoSTAnim()
 	Dim i
 	For i=0 to Ubound(STArray)
-		STArray(i)(3) = STAnimate(STArray(i)(0),STArray(i)(1),STArray(i)(2),STArray(i)(3))
+		STArray(i).animate = STAnimate(STArray(i).primary,STArray(i).prim,STArray(i).sw,STArray(i).animate)
 	Next
 End Sub
 
\ No newline at end of file
